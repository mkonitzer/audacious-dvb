#!/usr/bin/perl -w
use strict;
use XML::Writer;

#
# conf2xspf
#
# Description:
#   Convert channels.conf (scan, VDR) to .xspf-playlist (Audacious)
#
# Dependencies:
#   XML::Writer (see http://search.cpan.org/dist/XML-Writer/ for details)
#
# Usage:
#   For DVB-S (using 2 LNBs via DiSEqC) you could type:
#
#   scan -t 2 -o vdr -s 0 /path/to/Astra-19.2E > dvb-radio.conf
#   scan -t 2 -o vdr -s 1 /path/to/Hotbird-13.0E >> dvb-radio.conf
#   ./conf2xspf < dvb-radio.conf > dvb-radio.xspf

my %tr_diseqc = (
    'S19.2E' => '0',
    'S13.0E' => '1' 
);

my $writer = new XML::Writer(DATA_MODE => '1', DATA_INDENT => '2');
$writer->xmlDecl('iso-8859-1');
$writer->startTag('playlist', 'xmlns' => 'http://xspf.org/ns/0/', 'version' => '1');

$writer->dataElement('creator', 'conf2xspf');

$writer->startTag('extension', 'application' => 'audacious');
$writer->emptyTag('options', 'staticlist' => 'true');
$writer->endTag('extension');

$writer->startTag('trackList');

my @input;
while ( <> ) {
    chomp;
    @input = split(/:/);
    # Skip separator lines
    if ($input[0]) {
	my %output;

	# Get station name (w/o provider crap)
	my $sname = $input[0];
	$sname =~ s/[,;].*$//;

	# Tuning values
	$output{'freq'} = $input[1];
	if ($input[3] =~ /^S/) {
	    # DVB-S
	    $output{'pol'} = lc($input[2]);
	    $output{'diseqc'} = $tr_diseqc{$input[3]};
	    if (!$output{'diseqc'}) {
		$output{'diseqc'} = '0';
	    }
	} elsif ($input[3] =~ /^T/) {
	    # DVB-T
	    # TODO: parse $input[2], $input[4]
	} elsif ($input[3] =~ /^C/) {
	    # DVB-C
	    # TODO: parse $input[2], $input[4]
	} else {
	    # Should never happen!
	    next;
	}

	# Service values
	$output{'srate'} = $input[4];
	# Omit VPID ($input[5]), APIDs ($input[6]),
	#      TPID ($input[7]), scrambled ($input[8])
	$output{'sid'} = $input[9];

	# Output .xspf entry
	$writer->startTag('track');
	my $url;
	while ((my $par, my $val) = each(%output))
	{
	    $url .= ($url ? ":" : "" ) . "$par=$val"; 
	}
	$writer->dataElement('location', "dvb://audio?$url");
	$writer->dataElement('title', "$sname");
	$writer->endTag('track');
    } elsif ($input[1]) {
	# Separator
	$writer->comment($input[1]);
    }
}
$writer->endTag('trackList');

$writer->endTag('playlist');
$writer->end();
